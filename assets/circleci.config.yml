version: 2.1
orbs:
  ramsalt-ci: ramsalt/ci@1

parameters:
  wodby-application-uuid:
    #
    # IMPORTANT: Insert here the Application UUID
    # (As shown in wodby "Instance -> Settings")
    #
    default: ''
    type: string
  php_version:
    default: '8.3'
    type: string

workflows:
  version: 2
  # This workflow run jobs to help improve on the quality of the codebase
  # Will be run on issue and feature branches
  code-quality-assurance:
    jobs:
      - ramsalt-ci/php-codesniffer:
          php_version: << pipeline.parameters.php_version >>
          pr_target_branch: << pipeline.git.branch >>
          context: [wodby-api, private-packagist, bitbucket-auth]
          filters:
            branches: { only: ['/bugfix\/.*/', '/feature\/.*/', '/hotfix\/.*/', '/issue\/.*/'] }
      - ramsalt-ci/phpstan:
          php_version: << pipeline.parameters.php_version >>
          phpstan_level: 5
          context: [wodby-api, private-packagist]
          filters:
            branches: { only: ['/bugfix\/.*/', '/feature\/.*/', '/hotfix\/.*/', '/issue\/.*/'] }
      - ramsalt-ci/drupal-rector:
          php_version: << pipeline.parameters.php_version >>
          pr_target_branch: << pipeline.git.branch >>
          context: [wodby-api, private-packagist, bitbucket-auth]
          filters:
            branches: { only: ['/bugfix\/.*/', '/feature\/.*/', '/hotfix\/.*/', '/issue\/.*/'] }

  # This workflow takes care of both 'develop' and 'master' branch
  # if the wodby instances are named 'Dev' and 'Live'
  default-wodby-deployment:
    jobs:
      - ramsalt-ci/drupal-tests:
          database_from_wodby: true
          php_version: '<< pipeline.parameters.php_version >>'
          wodby_application_uuid: "<< pipeline.parameters.wodby-application-uuid >>"
          context: [ wodby-api, private-packagist ]
          filters:
            branches: { only: [ master, develop ] }
      - ramsalt-ci/build-drupal-and-deploy-on-wodby:
          wodby_app_uuid: << pipeline.parameters.wodby-application-uuid >>
          context: [wodby-api, private-packagist]
          #requires:
          #  - ramsalt-ci/drupal-tests
          filters:
            branches: { only: [ master, develop ] }

  # This workflow will create necessary changes to Drupal config when Renovatebot creates
  # a PR for a dependency update.
  # It will take configuration from the given Wodby instance and commit it back to the
  # branch that triggered the workflow.
  config-auto-update:
    jobs:
      - ramsalt-ci/drupal-config-auto-update:
          name: 'Config Update (Renovate)'
          php_version: '<< pipeline.parameters.php_version >>'
          wodby_instance_uuid: '' # Usually the Live instance uuid
          context: [ wodby-api, private-packagist, bitbucket-auth ]
          filters:
            branches: { only: /renovate\/.*/ }

#
# If you need more deployments you can define them here.
# A couple of examples are provided, but you can add as many as needed.
#
# You can use the drupal-build-theme job, if you want to build/compile a theme on runtime and you do
# not have the compiled CSS files in GIT. The job automaticlaly runs `npm install && npm run build`
# in the specified theme folder.
#
# To enable this workflows simply uncomment the following lines and update the configuration as needed.
#
#  custom-wodby-deployments:
#    jobs:
#      - ramsalt-ci/drupal-build-theme:
#          theme: 'yourthemename'
#      -
#        ramsalt-ci/build-drupal-and-deploy-on-wodby:
#          #
#          # EXAMPLE: Deploy branch 'preview' to the instance with hostname prefix "staging" and
#          # builds the theme before.
#          #
#          name: Deploy staging instance
#          wodby_app_uuid: << pipeline.parameters.wodby-application-uuid >>
#          wodby_instance_name: 'staging'
#          context: [wodby-api, private-packagist]
#          requires:
#            - ramsalt-ci/drupal-build-theme
#          filters:
#            branches:
#              only:
#                - preview
#      -
#        ramsalt-ci/build-drupal-and-deploy-on-wodby:
#          #
#          # EXAMPLE: Deploy branches 'feature/foo' and 'feature/bar' to the Instance with hostname prefix "feature"
#          #
#          name: Deploy feature instance
#          wodby_instance_name: 'feature'
#          wodby_app_uuid: << pipeline.parameters.wodby-application-uuid >>
#          context: [wodby-api, private-packagist]
#          filters:
#            branches:
#              only:
#                - feature/foo
#                - feature/bar
#
